@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix schema: <http://schema.org/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ex: <http://transport.linkeddata.es/madrid/> .

#set ($stopTimesFile = "./data/kgc-eval-distributions/csv/1/STOP_TIMES.csv")
#set ($stopsFile = "./data/kgc-eval-distributions/csv/1/STOPS.csv")
#set ($tripsFile = "./data/kgc-eval-distributions/csv/1/TRIPS.csv")
#set ($calendarDatesFile = "./data/kgc-eval-distributions/csv/1/CALENDAR_DATES.csv")
#set ($calendarFile = "./data/kgc-eval-distributions/csv/1/CALENDAR.csv")
#set ($feedFile = "./data/kgc-eval-distributions/csv/1/FEED_INFO.csv")
#set ($shapeFile = "./data/kgc-eval-distributions/csv/1/SHAPES.csv")
#set ($frequenciesFile = "./data/kgc-eval-distributions/csv/1/FREQUENCIES.csv")
#set ($agencyFile = "./data/kgc-eval-distributions/csv/1/AGENCY.csv")
#set ($routeFile = "./data/kgc-eval-distributions/csv/1/ROUTES.csv")

## AGENCY
#set ($agencyReader = $functions.getCSVReaderFromFile($agencyFile))
#set ($agencyData = $agencyReader.executeQueryStringValue(""))
#foreach($row in $agencyData)
 ex:agency\/$row.agency_id a gtfs:Agency ;
 foaf:page <${row.agency_url}> ;
 foaf:name $row.agency_name ;
 gtfs:timeZone $row.agency_timezone ;
 gtfs:language $row.agency_lang ;
 gtfs:phone $row.agency_phone ;
 gtfs:fareUrl <${row.agency_fare_url}> .
#end
## AGENCY END

## CALENDAR DATES
#set ($calendarDatesReader = $functions.getCSVReaderFromFile($calendarDatesFile))
#set ($calendarDatesData = $calendarDatesReader.executeQueryStringValue(""))
## calendar date rules
#foreach($row in $calendarDatesData)
 ex:metro\/calendar_date_rule\/${row.service_id} a gtfs:CalendarDateRule ;
 dct:date "$row.date"^^xsd:date ;
 gtfs:dateAddition "$row.exception_type"^^xsd:boolean .
#end
## CALENDAR DATES END

## CALENDAR
#set ($calendarReader = $functions.getCSVReaderFromFile($calendarFile))
#set ($calendarData = $calendarReader.executeQueryStringValue(""))
## calendar rules
#foreach($row in $calendarData)
 ex:metro\/calendar_rules\/${row.service_id} a gtfs:CalendarRule ;
 gtfs:monday "$row.monday"^^xsd:boolean ;
 gtfs:tuesday "$row.tuesday"^^xsd:boolean  ;
 gtfs:wednesday "$row.wednesday"^^xsd:boolean  ;
 gtfs:thursday "$row.thursday"^^xsd:boolean  ;
 gtfs:friday "$row.friday"^^xsd:boolean  ;
 gtfs:saturday "$row.saturday"^^xsd:boolean  ;
 gtfs:sunday "$row.sunday"^^xsd:boolean  ;
 schema:startDate "$row.start_date"^^xsd:date  ;
 schema:endDate "$row.end_date"^^xsd:date .
#end
## CALENDAR END

## FEED
#set ($feedReader = $functions.getCSVReaderFromFile($feedFile))
#set ($feedData = $feedReader.executeQueryStringValue(""))
#foreach($row in $feedData)
 ex:metro\/feed\/${row.feed_publisher_name} a gtfs:Feed ;
 dct:publisher "$row.feed_publisher_name" ;
 foaf:page <$row.feed_publisher_url> ;
 dct:language "$row.feed_lang" ;
 schema:startDate "$row.feed_start_date"^^xsd:date ;
 schema:endDate "$row.feed_end_date"^^xsd:date ;
 schema:version "$row.feed_version" .
#end
## FEED END

## SHAPE
#set ($shapeReader = $functions.getCSVReaderFromFile($shapeFile))
#set ($shapeData = $shapeReader.executeQueryStringValue(""))
#foreach($row in $shapeData)
 ex:metro\/shape\/${row.shape_id} a gtfs:Shape ;
 gtfs:shapePoint <ex:metro/shape_point/${row.shape_id}-${row.shape_pt_sequence}> .
#end
## SHAPE END

## SHAPE POINTS
#foreach($row in $shapeData)
 ex:metro\/shape_point\/${row.shape_id}-${row.shape_pt_sequence} a gtfs:ShapePoint ;
 geo:lat "$row.shape_pt_lat"^^xsd:double ;
 geo:long "$row.shape_pt_lon"^^xsd:double ;
 gtfs:pointSequence "$row.shape_pt_sequence" ;
 gtfs:distanceTraveled "$row.shape_dist_traveled" .
#end
## SHAPE POINTS END

## STOPS
#set ($stopsReader = $functions.getCSVReaderFromFile($stopsFile))
#set ($stopsData = $stopsReader.executeQueryStringValue(""))

#foreach($row in $stopsData)
 ex:\/stops\/$row.stop_id a gtfs:Stop ;
 gtfs:code "$row.stop_code" ;
 dct:identifier "$row.stop_id" ;
 foaf:name "$row.stop_name" ;
 dct:description "$row.stop_desc" ;
 geo:lat "$row.stop_lat"^^xsd:double ;
 geo:long "$row.stop_lon"^^xsd:double ;
 gtfs:zone "$row.zone_id" ;
 foaf:page <${row.stop_url}> ;
 gtfs:locationType <http://transport.linkeddata.es/resource/LocationType/${row.location_type}> ;
 gtfs:timeZone "$row.stop_timezone" ;
 
 ## do by list
#set ($lmStops = $functions.getListMap($stopsData, "parent_station"))
#set($t_stops = $functions.getListMapValue($lmStops, $row.stop_id))
#foreach($t_stop in $t_stops)
 gtfs:parentStation ex:stops\/$t_stop.stop_id ;
#end
gtfs:wheelchairAccessible <http://transport.linkeddata.es/resource/WheelchairBoardingStatus/${row.wheelchair_boarding}> .

#end
## STOPS END

## STOP TIMES
#set ($stopTimesReader = $functions.getCSVReaderFromFile($stopTimesFile))
#set ($stopTimesData = $stopTimesReader.executeQueryStringValue(""))

#foreach($row in $stopTimesData)

ex:metro\/stoptimes\/${row.trip_id}-${row.stop_id}-${row.arrival_time} rdf:type gtfs:StopTime ;
gtfs:arrivalTime "$row.arrival_time"^^xsd:duration ;
gtfs:departureTime "$row.departure_time"^^xsd:duration ;
gtfs:stopSequence "$row.stop_sequence"^^xsd:integer ;
gtfs:headsign "$row.stop_headsign" ;
gtfs:pickupType <http://transport.linkeddata.es/resource/PickupType/${row.pickup_type}> ;
gtfs:dropOffType <http://transport.linkeddata.es/resource/DropOffType/${row.drop_off_type}> ;

## do by list
#set ($lmtrips=$functions.getListMap($tripsData, "trip_id"))
#set($trs= $functions.getListMapValue($lmtrips, $row.trip_id))
 #foreach($tr in $trs)
  gtfs:trip ex:metro\/trips\/$tr.trip_id ;
 #end

## TODO THIS AS LIST
gtfs:stop ex:metro\/stops\/$row.stop_id ;

gtfs:distanceTraveled "${row.shape_dist_traveled}" .
#end
## STOP TIMES END

## ROUTES
#set ($routesReader = $functions.getCSVReaderFromFile($routeFile))
#set ($routesData = $routesReader.executeQueryStringValue(""))

#foreach($row in $routesData)
 ex:metro\/routes\/$row.route_id a gtfs:Route ;
 gtfs:shortName "$row.route_short_name" ;
 gtfs:longName "$row.route_long_name" ;
 dct:description "$row.route_desc" ;
 gtfs:routeType <http://transport.linkeddata.es/resource/RouteType/${row.route_type}> ;
 gtfs:routeUrl <${row.route_url}> ;
 gtfs:color "$row.route_color" ;

  ## do by list
 #set ($lmAgency = $functions.getListMap($agencyData, "agency_id"))
 #set($t_agencies = $functions.getListMapValue($lmAgency, $row.agency_id))
 #foreach($t_agency in $t_agencies)
  gtfs:agency ex:\/agency\/$t_agency.agency_id ;
 #end

 gtfs:textColor "$row.route_text_color" .
#end
## ROUTES END

## TRIPS
#set ($tripsReader = $functions.getCSVReaderFromFile($tripsFile))
#set ($tripsData = $tripsReader.executeQueryStringValue(""))

#foreach($row in $tripsData)
 ex:metro\/trips\/$row.trip_id a gtfs:Trip ;
 gtfs:headsign "$row.trip_headsign" ;
 gtfs:shortName "$row.trip_short_name" ;
 gtfs:direction "$row.direction_id" ;
 gtfs:block "$row.block_id" ;

 ## do by list
#set ($lmcalendar = $functions.getListMap($calendarData, "service_id"))
#set($ss = $functions.getListMapValue($lmcalendar, $row.service_id))
#foreach($s in $ss)
gtfs:service ex:metro\/services\/$s.service_id ;
#end

 ## do by list
#set ($lmcalendarDates = $functions.getListMap($calendarDatesData, "service_id"))
#set($ss2 = $functions.getListMapValue($lmcalendarDates, $row.service_id))
#foreach($s2 in $ss2)
gtfs:service ex:metro\/services\/$s2.service_id ;
## todo controllare sta logica
#end

#set ($lmRoutes = $functions.getListMap($routesData, "route_id"))
#set($t_routes = $functions.getListMapValue($lmRoutes, $row.route_id))
#foreach($t_route in $t_routes)
gtfs:route ex:metro\/routes\/$t_route.route_id ;
#end
## do by list
#set ($lmShape = $functions.getListMap($shapeData, "shape_id"))
#set($t_shapes = $functions.getListMapValue($lmShape, $row.shape_id))
#foreach($t_shape in $t_shapes)
gtfs:shape ex:metro\/shape_point\/$t_shape.shape_id ;
#end

gtfs:wheelchairAccessible <http://transport.linkeddata.es/resource/WheelchairBoardingStatus/${row.wheelchair_accessible}> .
#end
## TRIPS END

## FREQUENCIES
#set ($frequenciesReader = $functions.getCSVReaderFromFile($frequenciesFile))
#set ($frequenciesData = $frequenciesReader.executeQueryStringValue(""))
#foreach($row in $frequenciesData)
 ex:metro\/frequency\/${row.trip_id}-${row.start_time} a gtfs:Frequency ;
 gtfs:startTime "$row.start_time" ;
 gtfs:endTime "$row.end_time" ;
 gtfs:headwaySeconds "$row.headway_secs"^^xsd:integer ;
 
 ## do by list
 #set ($lmTrips = $functions.getListMap($tripsData, "trip_id"))
 #set($t_trips = $functions.getListMapValue($lmTrips, $row.trip_id))
 #foreach($t_trip in $t_trips)
   gtfs:trip ex:metro\/trips\/$t_trip.trip_id ;
 #end

gtfs:exactTimes "$row.exact_times"^^xsd:boolean .

#end
## FREQUENCIES END